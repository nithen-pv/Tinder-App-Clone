{"version":3,"sources":["Header.js","SwipeButton.js","axios.js","Tindercards.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","SwipeButton","instance","axios","create","baseURL","Tindercards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","onSwipe","direction","console","log","map","person","onCardLeftScreen","myIdentifier","preventSwipe","style","backgroundImage","imgUrl","name","App","padding","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAyBeA,MApBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAG3C,qBACIA,UAAU,eACVG,IAAI,8IACJC,IAAI,gBAER,cAACH,EAAA,EAAD,UACI,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,6FCmBvCK,MA3Bf,WACI,OACI,sBAAKL,UAAU,eAAf,UACI,cAACC,EAAA,EAAD,CAAYD,UAAU,2BAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAGzB,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAGxB,cAACD,EAAA,EAAD,CAAYD,UAAU,6BAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,6BAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,4BAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gB,kECvBvBI,E,OALEC,EAAMC,OAAO,CAC1BC,QAAS,2CCuCEC,MArCf,WAAwB,IAAD,EAESC,mBAAS,IAFlB,mBAEZC,EAFY,KAEJC,EAFI,KAInBC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACsBR,EAAMS,IAAI,UADhC,OACUC,EADV,OAEIJ,EAAUI,EAAIC,MAFlB,4CADY,uBAAC,WAAD,wBAKZC,KACD,IAEH,IAAMC,EAAU,SAACC,GACbC,QAAQC,IAAI,eAAiBF,IAOjC,OACI,qBAAKrB,UAAU,cAAf,SAEI,qBAAKA,UAAU,6BAAf,SACKY,EAAOY,KAAI,SAAAC,GACR,OAAO,cAAC,IAAD,CAA8BzB,UAAU,QAAQoB,QAASA,EAASM,iBAAkB,kBATjFC,EASwG,cAR9HL,QAAQC,IAAII,EAAe,oBADN,IAACA,GASmHC,aAAc,CAAC,KAAM,QAA3I,SACH,qBAAK5B,UAAU,OAAO6B,MAAO,CAAEC,gBAAgB,OAAD,OAASL,EAAOM,OAAhB,MAA9C,SACI,6BAAKN,EAAOO,UAFIP,EAAOO,cCfpCC,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAM6B,MAAO,CAACK,QAAQ,IAAIC,OAAO,KAAhD,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd4d7f00.chunk.js","sourcesContent":["import './Header.css';\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ForumIcon from '@material-ui/icons/Forum';\n\nfunction Header() {\n    return (\n        <div className=\"header\">\n            <IconButton>\n                <PersonIcon fontSize=\"large\" className=\"header__icon\" />\n            </IconButton>\n\n            <img\n                className='header__logo'\n                src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fpenmenpress.com%2Fwp-content%2Fuploads%2F2018%2F04%2FTinder-Logo.png&f=1&nofb=1\"\n                alt=\"tinder-logo\"\n            />\n            <IconButton>\n                <ForumIcon fontSize=\"large\" className=\"header__icon\"/>\n            </IconButton>\n\n        </div>\n    )\n}\n\nexport default Header\n","import './SwipeButton.css';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport CloseIcon from '@material-ui/icons/Close';\nimport StarRateIcon from '@material-ui/icons/StarRate';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\nimport IconButton from '@material-ui/core/IconButton';\n\n\n\nfunction SwipeButton() {\n    return (\n        <div className=\"swipeButtons\">\n            <IconButton className=\"swipeButtons__ReplayIcon\">\n                <ReplayIcon fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton className=\"swipeButtons__CloseIcon\">\n                <CloseIcon fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton className=\"swipeButtons__StarRateIcon\">\n                <StarRateIcon fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton className=\"swipeButtons__FavoriteIcon\">\n                <FavoriteIcon fontSize=\"large\"/>\n            </IconButton>\n\n            <IconButton className=\"swipeButtons__FlashOnIcon\">\n                <FlashOnIcon fontSize=\"large\"/>\n            </IconButton>\n\n        </div>\n    )\n}\n\nexport default SwipeButton\n","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://tinder-appclone.herokuapp.com/'\n\n});\n\nexport default instance;","import React, { useState, useEffect } from \"react\";\nimport TinderCard from 'react-tinder-card'\nimport './Tindercards.css';\nimport axios from './axios';\n\nfunction Tindercards() {\n\n    const [people, setPeople] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            const req = await axios.get('/cards');\n            setPeople(req.data);\n        }\n        fetchData();\n    }, [])\n\n    const onSwipe = (direction) => {\n        console.log('You swiped: ' + direction)\n    }\n\n    const onCardLeftScreen = (myIdentifier) => {\n        console.log(myIdentifier + ' left the screen')\n    }\n\n    return (\n        <div className=\"tinderCards\">\n\n            <div className=\"tinderCards__cardContainer\">\n                {people.map(person => {\n                    return <TinderCard key={person.name} className=\"swipe\" onSwipe={onSwipe} onCardLeftScreen={() => onCardLeftScreen('fooBar')} preventSwipe={['up', 'down']}>\n                        <div className=\"card\" style={{ backgroundImage: `url(${person.imgUrl})` }}>\n                            <h3>{person.name}</h3>\n                        </div>\n                    </TinderCard>\n                })}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Tindercards\n","import './App.css';\nimport Header from './Header';\nimport SwipeButton from './SwipeButton';\nimport Tindercards from './Tindercards';\n\nfunction App() {\n  return (\n    <div className=\"app\" style={{padding:\"0\",margin:\"0\"}}>\n      <Header/>\n      <Tindercards/>\n      <SwipeButton/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}